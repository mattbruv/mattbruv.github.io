1:"$Sreact.fragment"
2:I[9766,[],""]
3:I[8924,[],""]
5:I[4431,[],"OutletBoundary"]
7:I[5278,[],"AsyncMetadataOutlet"]
9:I[4431,[],"ViewportBoundary"]
b:I[4431,[],"MetadataBoundary"]
c:"$Sreact.suspense"
e:I[7150,[],""]
:HL["/_next/static/css/0f63a619df29c78b.css","style"]
:HL["/_next/static/css/5eacd01f773eed7f.css","style"]
0:{"P":null,"b":"lLKmyGbgC9GZXyGPxKThQ","p":"","c":["","gameboy-crust",""],"i":false,"f":[[["",{"children":[["slug","gameboy-crust","d"],{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0f63a619df29c78b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","meta",null,{"charSet":"UTF-8"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]]}],["$","body",null,{"id":"main","className":"main px-5 pb-10 max-w-5xl m-auto","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":[["slug","gameboy-crust","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5eacd01f773eed7f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6",["$","$L7",null,{"promise":"$@8"}]]}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$L9",null,{"children":"$La"}],null],["$","$Lb",null,{"children":["$","div",null,{"hidden":true,"children":["$","$c",null,{"fallback":null,"children":"$Ld"}]}]}]]}],false]],"m":"$undefined","G":["$e",[]],"s":false,"S":true}
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
f:I[2619,["619","static/chunks/619-ba102abea3e3d0e4.js","182","static/chunks/app/%5Bslug%5D/page-a8d66757df33bd31.js"],""]
4:["$","div",null,{"children":[["$","div",null,{"className":"flex flex-wrap p-1 sm:p-3","children":[[["$","$Lf","0",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all font-bold","href":"/","children":"Blog"}],["$","$Lf","1",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all font-normal","href":"/projects","children":"Projects"}],["$","$Lf","2",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all font-normal","href":"/travel","children":"Travel"}],["$","$Lf","3",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all font-normal","href":"/about","children":"About Me"}]],["$","$Lf","contact",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all ","target":"_blank","href":"https://docs.google.com/forms/d/e/1FAIpQLScM11T5L9SjhZ1c9A3OB7aWc6DuLYTzf9DStnFkalDKaKDpaA/viewform?usp=sharing&ouid=112011499277324502181","children":"Contact"}]]}],["$","div",null,{"className":"md:flex md:justify-center","children":["$","article",null,{"className":"prose md:prose-lg lg:prose-xl mt-16","children":[["$","h1",null,{"className":"mb-0","children":"Programming a Gameboy Color emulator"}],null,["$","div",null,{"className":"text-gray-400","children":"January 14, 2018"}],["$","div",null,{"className":"mt-6","children":[["$","p",null,{"children":"Have you ever wanted to go back and replay that nostalgic video game from your past?\nAs time goes on, it only gets more difficult (and expensive)\nto track down physical copies of these old systems and game cartridges from decades ago.\nIf you kept looking for a way to play them despite this, you have likely discovered and used emulators."}],"\n",["$","div",null,{"className":"grid grid-cols-3 sm:gap-4","children":[["$","img",null,{"src":"/images/gameboy-crust/mario.png","className":"flex-1"}],["$","img",null,{"src":"/images/gameboy-crust/zelda.png","className":"flex-1"}],["$","img",null,{"src":"/images/gameboy-crust/tetris.png","className":"flex-1"}]]}],"\n",["$","div",null,{"className":"grid grid-cols-2 md:grid-cols-4","children":[["$","img",null,{"src":"/images/gameboy-crust/gbemu2.gif"}],["$","img",null,{"src":"/images/gameboy-crust/gbemu5.gif"}],["$","img",null,{"src":"/images/gameboy-crust/gbemu1.gif"}],["$","img",null,{"src":"/images/gameboy-crust/gbemu3.gif"}]]}],"\n",["$","div",null,{"className":"subtitle","children":["$","p",null,{"children":["Screenshots from my emulators,\n",["$","a",null,{"href":"https://github.com/mattbruv/Gameboy-Crust","target":"_blank","className":"underline","children":"Gameboy Crust"}],"\nand original\n",["$","a",null,{"href":"https://github.com/mattbruv/Gameboy-Emulator","target":"_blank","className":"underline","children":"GB emu"}],"."]}]}],"\n",["$","p",null,{"children":"An emulator is a piece of software that enables programs for one system (the guest system)\nto run on an entirely different system (the host).\nHave you ever wondered how they work?\nMany people who have used emulators (my younger self included) tend to\nwrite them off as some kind of black magic witchcraft.\nHowever, taking the time to understand how an emulator works under the hood\nis an incredibly rewarding and educational experience in many ways."}],"\n",["$","p",null,{"children":["This page will describe what I learned during the process of developing an emulator for\nthe Nintendo ",["$","a",null,{"href":"https://en.wikipedia.org/wiki/Game_Boy_Color","target":"_blank","className":"underline","children":"Gameboy Color"}],".\nThe host system can be any version of Linux/Windows/MacOS.\nPseudocode will be presented in ",["$","a",null,{"href":"https://www.rust-lang.org/en-US/","target":"_blank","className":"underline","children":"Rust"}]," syntax.\nThere are many systems that can be emulated,\nbut the choice was easy for me since the Gameboy was my first videogame console."]}],"\n",["$","h2",null,{"children":"Theory"}],"\n",["$","p",null,{"children":"The Gameboy, along with all old video game consoles, are nothing more than simple versions of computers.\nWe know that a computer is a device that can carry out logical tasks.\nWhen we view the Gameboy as a computer, the video game cartridges are the 'programs'\nthat run on it and tell it which instructions to execute."}],"\n","$L10","\n","$L11","\n","$L12","\n","$L13","\n","$L14","\n","$L15","\n","$L16","\n","$L17","\n","$L18","\n","$L19","\n","$L1a","\n","$L1b","\n","$L1c","\n","$L1d","\n","$L1e","\n","$L1f","\n","$L20","\n","$L21","\n","$L22","\n","$L23","\n","$L24","\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35","\n","$L36","\n","$L37","\n","$L38","\n","$L39","\n","$L3a","\n","$L3b","\n","$L3c","\n","$L3d","\n","$L3e","\n","$L3f","\n","$L40","\n","$L41","\n","$L42","\n","$L43","\n","$L44","\n","$L45","\n","$L46","\n","$L47","\n","$L48","\n","$L49","\n","$L4a","\n","$L4b","\n","$L4c","\n","$L4d","\n","$L4e","\n","$L4f","\n","$L50","\n","$L51","\n","$L52","\n","$L53","\n","$L54","\n","$L55","\n","\n","$L56","\n","$L57"]}]]}]}]]}]
8:{"metadata":[["$","title","0",{"children":"Programming a Gameboy Color emulator - Matt's Blog"}],["$","meta","1",{"name":"description","content":"A blog about coding, travel, and life."}]],"error":null,"digest":"$undefined"}
d:"$8:metadata"
10:["$","p",null,{"children":"An emulator works by virtualy representing the physical hardware of the guest machine.\nThis means that in order to create an emulator for the Gameboy, we have to\nvirtually simulate how the real hardware of the gameboy would function.\nWith this in mind, let's take a look at the hardware of the Gameboy and how it all\ninteracts so we can form an understanding of how to emulate it in code."}]
11:["$","h2",null,{"children":"Hardware"}]
12:["$","p",null,{"children":"The Gameboy has the following hardware features:"}]
13:["$","ul",null,{"children":["\n",["$","li",null,{"children":"8-bit Central Processing Unit"}],"\n",["$","li",null,{"children":"32Kb Work Random Access Memory (RAM)"}],"\n",["$","li",null,{"children":"16Kb Display RAM"}],"\n",["$","li",null,{"children":"Liquid Crystal Display Screen"}],"\n",["$","li",null,{"children":"Read Only Memory (ROM) AKA the external video game cartridge"}],"\n",["$","li",null,{"children":"Joypad Input"}],"\n",["$","li",null,{"children":"Audio Speaker"}],"\n",["$","li",null,{"children":"Serial Transfer Port (link cable)"}],"\n"]}]
14:["$","h2",null,{"children":"Memory"}]
15:["$","p",null,{"children":"The Gameboy has a few different types of memory that need to all be emulated:"}]
16:["$","ul",null,{"children":["\n",["$","li",null,{"children":"Work RAM"}],"\n",["$","li",null,{"children":"Video RAM"}],"\n",["$","li",null,{"children":"Cartridge ROM"}],"\n",["$","li",null,{"children":"External RAM"}],"\n"]}]
17:["$","p",null,{"children":["Memory is one of the easiest things to implement in code.\nRegardless of what is actually being stored in each memory location, we represent it in the same way.\nWe can equate a block of memory in the hardware to simply allocating ",["$","code",null,{"children":"N"}]," bytes of memory in our program:"]}]
18:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"new"}],"() ",["$","span",null,{"className":"hljs-punctuation","children":"->"}]," Wram {\n\tWram {\n\t\tbytes: ",["$","span",null,{"className":"hljs-built_in","children":"vec!"}],"[",["$","span",null,{"className":"hljs-number","children":"0"}],"; WRAM_SIZE],\n\t}\n}\n"]}]}]
19:["$","p",null,{"children":"Then all we need are methods to read and write to our virtual memory.\nThe Gameboy has a 16-bit address space, so we can use an unsigned 16-bit integer to index our memory:"}]
1a:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"read"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"self"}],", address: ",["$","span",null,{"className":"hljs-type","children":"u16"}],") ",["$","span",null,{"className":"hljs-punctuation","children":"->"}]," ",["$","span",null,{"className":"hljs-type","children":"u8"}]," {\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".bytes[address ",["$","span",null,{"className":"hljs-keyword","children":"as"}]," ",["$","span",null,{"className":"hljs-type","children":"usize"}],"]\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"write"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],", address: ",["$","span",null,{"className":"hljs-type","children":"u16"}],", data: ",["$","span",null,{"className":"hljs-type","children":"u8"}],") {\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".bytes[address ",["$","span",null,{"className":"hljs-keyword","children":"as"}]," ",["$","span",null,{"className":"hljs-type","children":"usize"}],"] = data;\n}\n"]}]}]
1b:["$","p",null,{"children":"And that is all that is needed to emulate any kind of physical memory in the Gameboy.\nThe only exception to this is the game cartridge which is read-only memory (ROM).\nSince this memory is read-only, we do not implement a write method.\nThe ROM is still a contiguous buffer of data, but we read it in from a file instead of\ninitializing an empty vector:"}]
1c:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"load"}],"(path: ",["$","span",null,{"className":"hljs-type","children":"String"}],") ",["$","span",null,{"className":"hljs-punctuation","children":"->"}]," Rom {\n\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-keyword","children":"mut "}],["$","span",null,{"className":"hljs-variable","children":"buffer"}]," = ",["$","span",null,{"className":"hljs-type","children":"Vec"}],"::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"new"}],"();\n\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-keyword","children":"mut "}],["$","span",null,{"className":"hljs-variable","children":"file"}]," = File::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"open"}],"(path).",["$","span",null,{"className":"hljs-title function_ invoke__","children":"expect"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Invalid ROM path\""}],");\n\tfile.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read_to_end"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," buffer).",["$","span",null,{"className":"hljs-title function_ invoke__","children":"expect"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Unable to read ROM\""}],");\n\n\tRom {\n\t\tbytes: buffer\n\t}\n}\n"]}]}]
1d:["$","h2",null,{"children":"Memory Mapping"}]
1e:["$","p",null,{"children":"But what is the point of writing many sub-allocations of memory?\nWhy not just define the entire 64Kb of memory in one contiguous vector?"}]
1f:["$","p",null,{"children":"The Gameboy hardware actually implements virtual memory via memory mapping.\nThis means that logical blocks of memory can be swapped out, but the address range remains the same.\nThis is powerful because the amount of useable memory is not bound by the limit of the address size (2^16 or 0xFFFF)"}]
20:["$","p",null,{"children":"Consider an example:\nThe 8Kb of video RAM is defined in address space 0x8000 through 0x9FFF.\nBy writing to a special register, the entire 8Kb of VRAM data can be swapped out at will for another bank of 8Kb.\nThis effectively doubles our VRAM to 16Kb while using the same address space."}]
21:["$","p",null,{"children":"Since the Gameboy has this scheme of memory management, we must also emulate it.\nThis can be done by defining a struct that has control over all of our memory and interconnects them:"}]
22:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"new"}],"(_rom: Rom) ",["$","span",null,{"className":"hljs-punctuation","children":"->"}]," Interconnect {\n\tInterconnect {\n\t\trom: _rom,\n\t\tgpu: Gpu::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"new"}],"(),\n\t\twram: Wram::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"new"}],"(),\n\t\thram: Hram::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"new"}],"(),\n\t}\n}\n"]}]}]
23:["$","p",null,{"children":["Now we can call ",["$","code",null,{"children":"read"}]," and ",["$","code",null,{"children":"write"}]," on any address and not have to care because\nthe memory mapping and bank switching is handled automatically."]}]
24:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"read"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"self"}],", address: ",["$","span",null,{"className":"hljs-type","children":"u16"}],") ",["$","span",null,{"className":"hljs-punctuation","children":"->"}]," ",["$","span",null,{"className":"hljs-type","children":"u8"}]," {\n\t",["$","span",null,{"className":"hljs-keyword","children":"match"}]," address {\n\t\tROM_START  ... ROM_BANK_END  => ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".rom.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read"}],"(address), ",["$","span",null,{"className":"hljs-comment","children":"// $0000..."}],"\n\t\tVRAM_START ... VRAM_END => ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gpu.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read"}],"(address),\n\t\tERAM_START ... ERAM_END => ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".rom.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read"}],"(address),\n\t\tWRAM_START ... WRAM_END => ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".wram.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read"}],"(address),\n\t\tECHO_START ... ECHO_END => ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".wram.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read"}],"(address),\n\t\tOAM_START  ... OAM_END  => ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gpu.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read"}],"(address),\n\t\tHRAM_START ... HRAM_END => ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".hram.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read"}],"(address), ",["$","span",null,{"className":"hljs-comment","children":"// ...$FFFF"}],"\n\t\t_ => ",["$","span",null,{"className":"hljs-built_in","children":"panic!"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Invalid Read\""}],")\n\t}\n}\n"]}]}]
25:["$","div",null,{"className":"subtitle","children":["$","p",null,{"children":["Dynamic memory addressing. The ",["$","code",null,{"children":"write"}]," method is similar."]}]}]
26:["$","p",null,{"children":"The responsibility of returning the correct data is now passed on to the individual memory modules.\nIt is there that they match the address to the appropriate vector depending on the active memory bank.\nSince the processor relies on data from memory, it can make use of these methods and is emulated next."}]
27:["$","h2",null,{"children":"CPU"}]
28:["$","p",null,{"children":"The Gameboy CPU is a modified version of the 8-bit Zilog-Z80 microprocessor and has the following features:"}]
29:["$","ul",null,{"children":["\n",["$","li",null,{"children":"Eight 8-bit registers: A, B, C, D, E, F, H, L"}],"\n",["$","li",null,{"children":"Two 16-bit registers: SP (Stack Pointer), PC (Program Counter)"}],"\n"]}]
2a:["$","p",null,{"children":"The 8-bit registers are each 1 byte of internal memory specifically designated for the CPU so it can quickly perform arithmetic.\nThe PC register stores the address of the next CPU instruction to be executed.\nThe SP register stores the top address of a LIFO stack. These registers can be represented easily:"}]
2b:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"struct"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Registers"}]," {\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," a: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," f: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," b: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," c: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," d: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," e: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," h: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," l: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," sp: ",["$","span",null,{"className":"hljs-type","children":"u16"}],",\n\t",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," pc: ",["$","span",null,{"className":"hljs-type","children":"u16"}],",\n}\n"]}]}]
2c:["$","p",null,{"children":"The CPU has hundreds of unique instructions that are indexed by an 8-bit value.\nEach instruction does something important, like performing arithmetic,\nloading data into memory, comparing values, etc.\nThe CPU runs at 4.19 Megahertz which means that it performs 4.1 million cycles per second.\nTo put that into perspective, my desktop computer has a 4 Gigahertz processor,\nwhich is over 1,000 times faster than the Gameboy's CPU!"}]
2d:["$","p",null,{"children":"Modern video game consoles are running at much higher speeds.\nthis is why emulators for the Playstation, Xbox, or Wii tend to be slower.\nNot to mention that every single piece of hardware for modern consoles is becoming more and more advanced.\nThis makes reverse engineering and emulating modern consoles an overwhelming challenge to say the least."}]
2e:["$","p",null,{"children":"But let's get back to the archaic Gameboy. Each instruction has a varying amount of cycles that it takes.\nAn average instruction takes about 4, 8, or 12 cycles depending on what it does."}]
2f:["$","p",null,{"children":"The instruction that the CPU will execute next is found at the memory location defined by the program counter (PC) register:"}]
30:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-comment","children":"// Reads the next byte and increments the program counter"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"next_byte"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],", memory: &Interconnect) ",["$","span",null,{"className":"hljs-punctuation","children":"->"}]," ",["$","span",null,{"className":"hljs-type","children":"u8"}]," {\n\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"byte"}]," = memory.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read"}],"(",["$","span",null,{"className":"hljs-keyword","children":"self"}],".regs.pc);\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".regs.pc = ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".regs.pc.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"wrapping_add"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],");\n\tbyte\n}\n"]}]}]
31:["$","p",null,{"children":"The most important part of CPU emulation is the fetch/decode/execute procedure:"}]
32:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-comment","children":"// Perform one step of the fetch-decode-execute cycle"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"step"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],", memory: &",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," Interconnect) ",["$","span",null,{"className":"hljs-punctuation","children":"->"}]," ",["$","span",null,{"className":"hljs-type","children":"usize"}]," {\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"handle_interrupts"}],"(memory);\n\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"opcode"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"next_byte"}],"(memory);\n\t",["$","span",null,{"className":"hljs-comment","children":"// decodes/excecutes each operation and returns cycles taken"}],"\n\t",["$","span",null,{"className":"hljs-keyword","children":"match"}]," opcode {\n\t\t",["$","span",null,{"className":"hljs-number","children":"0x78"}]," => { ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".regs.a = ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".regs.b; ",["$","span",null,{"className":"hljs-number","children":"4"}]," }, ",["$","span",null,{"className":"hljs-comment","children":"// LD A, B"}],"\n\t\t",["$","span",null,{"className":"hljs-number","children":"0x79"}]," => { ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".regs.a = ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".regs.c; ",["$","span",null,{"className":"hljs-number","children":"4"}]," }, ",["$","span",null,{"className":"hljs-comment","children":"// LD A, C"}],"\n\t\t",["$","span",null,{"className":"hljs-comment","children":"// repeat for every instruction..."}],"\n\t\t_ => ",["$","span",null,{"className":"hljs-built_in","children":"panic!"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Unknown Opcode: ${:02X} @ ${:04X}\""}],", opcode, ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".regs.pc)\n\t}\n}\n"]}]}]
33:["$","p",null,{"children":"This procedure reads the next instruction from memory and translates/carries out the task it represents.\nEach branch returns the amount of cycles taken for that instruction.\nThe Gameboy's other hardware (video/audio/etc.) is all tied in with the processor speed.\nKeeping track of the cycles taken is important to keeping all other hardware in sync."}]
34:["$","h2",null,{"children":"Video Display"}]
35:["$","p",null,{"children":"Interestingly, the Gameboy has a very smooth screen refresh rate of 60Hz.\nThis means that the screen updates or draws a new frame to the LCD screen 60 times per second.\nSince we know how many times the CPU cycles per second,\nit is easy to time our video output.\nAll that we have to do is divide the CPU cycles per second by the number of frames per second:"}]
36:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"const"}]," CLOCK_SPEED: ",["$","span",null,{"className":"hljs-type","children":"i32"}]," = ",["$","span",null,{"className":"hljs-number","children":"4194304"}],";\n",["$","span",null,{"className":"hljs-keyword","children":"const"}]," FRAME_RATE: ",["$","span",null,{"className":"hljs-type","children":"i32"}]," = ",["$","span",null,{"className":"hljs-number","children":"60"}],";\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"cycles_per_frame"}]," = clock_speed / FRAME_RATE;\n"]}]}]
37:["$","p",null,{"children":["Then the GPU struct needs a variable to count the number of cycles since the last frame.\nOnce this counter goes above ",["$","code",null,{"children":"cycles_per_frame"}],", then we know that it is time to draw a frame to the screen."]}]
38:["$","p",null,{"children":"When the Gameboy is running, there are certain times when the video hardware is accessing video memory.\nBecause games are not allowed to write to video memory when the GPU is reading from it,\nit is important to emulate and keep track of these hardware timings."}]
39:["$","p",null,{"children":["The Gameboy's screen resolution is 160x144 pixels.\nA lot of the old video displays update the screen in ",["$","a",null,{"href":"https://en.wikipedia.org/wiki/Scan_line","target":"_blank","className":"underline","children":"scan lines"}],"\ngoing from left-to-right, top-to-bottom.\nOnce a scanline is drawn, the beam goes through a ",["$","a",null,{"href":"https://en.wikipedia.org/wiki/Horizontal_blanking_interval","target":"_blank","className":"underline","children":"horizontal blanking"}],"\nperiod where it resets itself far left and one scanline down.\nOnce it has drawn all 144 scanlines, it goes through the vertical blanking period\nand it resets itself at the top of the screen to start the process again.\nThis rendering process can be emulated by keeping track of the modes."]}]
3a:["$","p",null,{"children":"Special system interrupts are also called when the GPU starts doing something new.\nThis is useful for programmers, because it enables programmers to have special per-scanline video effects."}]
3b:["$","p",null,{"children":"The meat and potatoes of our GPU is a function that keeps track of the emulated cycles and updates the\ninternal state of the GPU accodringly.\nOnce enough time has passed that a frame can be drawn, the internal framebuffer is cloned and passed\nto the emulator to be displayed."}]
3c:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"cycles"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],", cycles: ",["$","span",null,{"className":"hljs-type","children":"usize"}],", interrupt: &",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," InterruptHandler, video_sink: &",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," VideoSink) {\n\t",["$","span",null,{"className":"hljs-keyword","children":"if"}]," !",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"display_enabled"}],"() {\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"return"}],";\n\t}\n\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"old_mode"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"get_mode"}],"();\n\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-keyword","children":"mut "}],["$","span",null,{"className":"hljs-variable","children":"new_mode"}],": StatusMode;\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".scanline_cycles += cycles;\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".frame_cycles += cycles;\n\t",["$","span",null,{"className":"hljs-comment","children":"// we are in vblank"}],"\n\n\t",["$","span",null,{"className":"hljs-keyword","children":"if"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".frame_cycles > FRAME_PERIOD {\n\t\t",["$","span",null,{"className":"hljs-comment","children":"// We have just entered the Vblank period"}],"\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"if"}]," old_mode != StatusMode::VBlank {\n\t\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_mode"}],"(StatusMode::VBlank);\n\t\t\t",["$","span",null,{"className":"hljs-comment","children":"// Call the appropriate interrupt"}],"\n\t\t\tinterrupt.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"request_interrupt"}],"(InterruptFlag::VBlank);\n\t\t\trequest_interrupt = ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".STAT.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_set"}],"(Bit::Bit4);\n\t\t\tvideo_sink.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"append"}],"(",["$","span",null,{"className":"hljs-keyword","children":"self"}],".frame_buffer.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"clone"}],"());\n\t\t}\n\t\t",["$","span",null,{"className":"hljs-comment","children":"// we have completed vblank period, reset everything, update sink"}],"\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"if"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".frame_cycles > VBLANK_PERIOD {\n\t\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".scanline_cycles = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n\t\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".frame_cycles = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n\t\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".LY.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"clear"}],"();\n\t\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"line_compare"}],"(interrupt);\n\t\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_mode"}],"(StatusMode::Oam);\n\t\t}\n\t} ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n\t\t",["$","span",null,{"className":"hljs-comment","children":"// Update the scanline state"}],"\n\t\t","$L58"," ","$L59",".scanline_cycles {\n\t\t\t","$L5a"," ... OAM_PERIOD => { ","$L5b","\n\t\t\t\t","$L5c"," old_mode != StatusMode::Oam {\n\t\t\t\t\t","$L5d",".","$L5e","(StatusMode::Oam);\n\t\t\t\t\trequest_interrupt = ","$L5f",".STAT.","$L60","(Bit::Bit5);\n\t\t\t\t}\n\t\t\t},\n\t\t\tOAM_PERIOD ... TRANSFER_PERIOD => { ","$L61","\n\t\t\t\t","$L62"," old_mode != StatusMode::Transfer {\n\t\t\t\t\t","$L63",".","$L64","(StatusMode::Transfer);\n\t\t\t\t\t","$L65","\n\t\t\t\t\t","$L66",".","$L67","();\n\t\t\t\t}\n\t\t\t},\n\t\t\tTRANSFER_PERIOD ... HBLANK_PERIOD => { ","$L68","\n\t\t\t\t","$L69","\n\t\t\t\t","$L6a"," old_mode != StatusMode::HBlank {\n\t\t\t\t\t","$L6b",".","$L6c","(StatusMode::HBlank);\n\t\t\t\t\trequest_interrupt = ","$L6d",".STAT.","$L6e","(Bit::Bit3);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_ => {},\n\t\t}\n\t}\n\n\t","$L6f","\n\t","$L70"," request_interrupt {\n\t\tinterrupt.","$L71","(InterruptFlag::Lcdc);\n\t}\n\n\t","$L72","\n\t","$L73","\n\t","$L74"," ","$L75",".scanline_cycles > HBLANK_PERIOD {\n\t\t","$L76",".LY.","$L77","(","$L78",");\n\t\t","$L79",".scanline_cycles = ","$L7a",";\n\t\t","$L7b",".","$L7c","(interrupt);\n\t}\n}\n"]}]}]
3d:["$","p",null,{"children":"The internal framebuffer is a vector of bytes sized to the dimensions of our screen:"}]
3e:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":["frame_buffer: ",["$","span",null,{"className":"hljs-built_in","children":"vec!"}],"[",["$","span",null,{"className":"hljs-number","children":"0"}],"; FRAME_WIDTH * FRAME_HEIGHT],\n"]}]}]
3f:["$","p",null,{"children":["At the end of each scanline, we update the framebuffer with the contents of VRAM.\nThis is done in the ",["$","code",null,{"children":"update_scanline"}]," function:"]}]
40:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"update_scanline"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],") {\n\t",["$","span",null,{"className":"hljs-keyword","children":"if"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".LCDC.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_set"}],"(Bit::Bit0) {\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"draw_background"}],"();\n\t}\n\t",["$","span",null,{"className":"hljs-keyword","children":"if"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".LCDC.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_set"}],"(Bit::Bit5) {\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"draw_window"}],"();\n\t}\n\t",["$","span",null,{"className":"hljs-keyword","children":"if"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".LCDC.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_set"}],"(Bit::Bit1) {\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"draw_sprites"}],"();\n\t}\n}\n"]}]}]
41:["$","p",null,{"children":"The Gameboy has 3 distinct video layers that are all made up of 8x8 pixel tiles."}]
42:["$","ul",null,{"children":["\n",["$","li",null,{"children":"Background"}],"\n",["$","li",null,{"children":"Window"}],"\n",["$","li",null,{"children":"Sprites"}],"\n"]}]
43:["$","p",null,{"children":"The contents of each one are defined in their own special place in VRAM.\nThe background layer is just that. A background of graphics to be drawn to the screen.\nThe window layer is a static layer drawn above the background.\nThe window typically is a blank space that keeps track of player lives/scores, etc.\nSprites are the small characters that move on screen, and are typically drawn on top of the background layer."}]
44:["$","p",null,{"children":["Each one is rendered slightly differently and the intricacies are beyond what I want to write about in this blog.\nA full overview of my GPU implementation can be found\n",["$","a",null,{"href":"https://github.com/mattbruv/Gameboy-Crust/blob/master/src/core/gpu.rs","target":"_blank","className":"underline","children":"here"}],"."]}]
45:["$","h2",null,{"children":"Joypad Input"}]
46:["$","p",null,{"children":"There are 4 directional and 4 general buttons on the Gameboy.\nThe game can read/write to a special address in memory\nto determine the state of the buttons.\nIn order to emulate this, all that is needed is a struct\nthat wraps our host keyboard keypresses to the 8-bit\nmemory register that the game expects to read from."}]
47:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"struct"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Joypad"}]," {\n    button_state: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n    directional_state: ",["$","span",null,{"className":"hljs-type","children":"u8"}],",\n    register: MemoryRegister,\n}\n"]}]}]
48:["$","p",null,{"children":"When we press a button on our keyboard, we want to call a funciton\nthat updates the internal state of our joypad.\nFor convenience this can be called at the same interval that we refresh the screen\n(60 times per second)."}]
49:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"read_input"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],") {\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gameboy.joypad.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_direction_pressed"}],"(PAD_UP, ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_key_down"}],"(Key::Up));\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gameboy.joypad.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_direction_pressed"}],"(PAD_DOWN, ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_key_down"}],"(Key::Down));\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gameboy.joypad.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_direction_pressed"}],"(PAD_LEFT, ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_key_down"}],"(Key::Left));\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gameboy.joypad.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_direction_pressed"}],"(PAD_RIGHT, ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_key_down"}],"(Key::Right));\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gameboy.joypad.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_button_pressed"}],"(BUTTON_A, ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_key_down"}],"(Key::A));\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gameboy.joypad.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_button_pressed"}],"(BUTTON_B, ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_key_down"}],"(Key::S));\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gameboy.joypad.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_button_pressed"}],"(BUTTON_START, ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_key_down"}],"(Key::Z));\n\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gameboy.joypad.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_button_pressed"}],"(BUTTON_SELECT, ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_key_down"}],"(Key::X));\n}\n"]}]}]
4a:["$","p",null,{"children":["And the ",["$","code",null,{"children":"set_button_pressed"}]," example method looks like this (",["$","code",null,{"children":"set_direction_pressed"}]," is similar):"]}]
4b:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"set_button_pressed"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],", interrupt: &",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," InterruptHandler, input: ",["$","span",null,{"className":"hljs-type","children":"u8"}],", is_pressed: ",["$","span",null,{"className":"hljs-type","children":"bool"}],") {\n\t",["$","span",null,{"className":"hljs-keyword","children":"match"}]," is_pressed {\n\t    ",["$","span",null,{"className":"hljs-literal","children":"true"}],"  => {\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".button_state = ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".button_state | input;\n\t\tinterrupt.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"request_interrupt"}],"(InterruptFlag::Joypad);\n\t    },\n\t    ",["$","span",null,{"className":"hljs-literal","children":"false"}]," => { ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".button_state = ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".button_state & !input; },\n\t}\n}\n"]}]}]
4c:["$","p",null,{"children":"Then, whenever the special joypad register is read from, it will accurately return\nthe state of the buttons pressed on your host keyboard,\ndepending on whether the game requests directional or regular buttons:"}]
4d:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"read"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"self"}],") ",["$","span",null,{"className":"hljs-punctuation","children":"->"}]," ",["$","span",null,{"className":"hljs-type","children":"u8"}]," {\n        ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-keyword","children":"mut "}],["$","span",null,{"className":"hljs-variable","children":"result"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".register.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"get"}],"() & ",["$","span",null,{"className":"hljs-number","children":"0x30"}],";\n        ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"pad"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"match"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".read_next {\n            ReadInput::Directional => !",["$","span",null,{"className":"hljs-keyword","children":"self"}],".directional_state,\n            ReadInput::Buttons => !",["$","span",null,{"className":"hljs-keyword","children":"self"}],".button_state,\n        };\n        result | (pad & ",["$","span",null,{"className":"hljs-number","children":"0x0F"}],")\n}\n"]}]}]
4e:["$","h2",null,{"children":"Bringing it all together"}]
4f:["$","p",null,{"children":"The last thing that is needed is a class that ties it all together.\nThe emulator class has our Gameboy object and a window object.\nWe load the ROM file and pass it to our gameboy, and initialize the window."}]
50:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"new"}],"(rom: Rom) ",["$","span",null,{"className":"hljs-punctuation","children":"->"}]," Emulator {\n\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-keyword","children":"mut "}],["$","span",null,{"className":"hljs-variable","children":"title"}]," = ",["$","span",null,{"className":"hljs-string","children":"\"Gameboy Crust - \""}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"to_owned"}],"();\n\ttitle.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"push_str"}],"(&rom.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"name"}],"());\n\tEmulator {\n\t\tgameboy: GameBoy::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"new"}],"(rom),\n\t\twindow: Window::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"new"}],"(title.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"as_str"}],"(), ",["$","span",null,{"className":"hljs-number","children":"160"}],", ",["$","span",null,{"className":"hljs-number","children":"144"}],", WindowOptions {\n\t\t\tborderless: ",["$","span",null,{"className":"hljs-literal","children":"false"}],",\n\t\t\ttitle: ",["$","span",null,{"className":"hljs-literal","children":"true"}],",\n\t\t\tresize: ",["$","span",null,{"className":"hljs-literal","children":"false"}],",\n\t\t\tscale: Scale::X4,\n\t\t}).",["$","span",null,{"className":"hljs-title function_ invoke__","children":"unwrap"}],"(),\n\t}\n}\n"]}]}]
51:["$","p",null,{"children":["Now we implement a ",["$","code",null,{"children":"run"}]," function that will be called from ",["$","code",null,{"children":"main"}]," and will run forever.\nThis is the high level function that emulates the Gameboy.\nIt matches the 4.19Mhz speed of the CPU, and updates the video and reads joypad input at 60Hz:"]}]
52:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-rust","children":[["$","span",null,{"className":"hljs-keyword","children":"pub"}]," ",["$","span",null,{"className":"hljs-keyword","children":"fn"}]," ",["$","span",null,{"className":"hljs-title function_","children":"run"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],") {\n\t",["$","span",null,{"className":"hljs-keyword","children":"while"}]," ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_open"}],"() && !",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_key_down"}],"(Key::Escape) {\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"start_time"}]," = Instant::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"now"}],"();\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"frame_time"}]," = Duration::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"new"}],"(",["$","span",null,{"className":"hljs-number","children":"0"}],", ",["$","span",null,{"className":"hljs-number","children":"16600000"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// 16.6 ms as nanoseconds"}],"\n\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-keyword","children":"mut "}],["$","span",null,{"className":"hljs-variable","children":"video_sink"}]," = VideoSink::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"new"}],"();\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"cycles_per_frame"}]," = clock_speed / FRAME_RATE;\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-keyword","children":"mut "}],["$","span",null,{"className":"hljs-variable","children":"emulated_cycles"}]," = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"while"}]," emulated_cycles <= cycles_per_frame {\n\t\t\temulated_cycles += ",["$","span",null,{"className":"hljs-keyword","children":"self"}],".gameboy.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"step"}],"(&",["$","span",null,{"className":"hljs-keyword","children":"mut"}]," video_sink) ",["$","span",null,{"className":"hljs-keyword","children":"as"}]," ",["$","span",null,{"className":"hljs-type","children":"i32"}],";\n\t\t}\n\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"if"}]," ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"Some"}],"(frame) = video_sink.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"consume"}],"() {\n\t\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".window.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"update_with_buffer"}],"(frame.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"as_slice"}],"()).",["$","span",null,{"className":"hljs-title function_ invoke__","children":"unwrap"}],"();\n\t\t\t",["$","span",null,{"className":"hljs-keyword","children":"self"}],".",["$","span",null,{"className":"hljs-title function_ invoke__","children":"read_input"}],"();\n\t\t}\n\n\t\t",["$","span",null,{"className":"hljs-comment","children":"// We have done our calculations, wait the remaning time"}],"\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"elapsed_time"}]," = start_time.",["$","span",null,{"className":"hljs-title function_ invoke__","children":"elapsed"}],"();\n\t\t",["$","span",null,{"className":"hljs-keyword","children":"if"}]," !(elapsed_time > frame_time) {\n\t\t\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ",["$","span",null,{"className":"hljs-variable","children":"remaining_time"}]," = frame_time - elapsed_time;\n\t\t\tthread::",["$","span",null,{"className":"hljs-title function_ invoke__","children":"sleep"}],"(remaining_time);\n\t\t}\n\t}\n}\n"]}]}]
53:["$","h2",null,{"children":"Conclusion"}]
54:["$","p",null,{"children":"Programming emulators is a very challenging, technical, long, and difficult task.\nThis project took me quite some time, and I had good documentation!\nI didn't even have to go through the more difficult process of reverse engineering the system.\nThis project has given me a great deal of respect for the people who are reverse engineering\nand writing emulators for modern consoles."}]
55:["$","p",null,{"children":"Overall, it was a great learning experience.\nstepping through and debugging an emulator really forces you to learn about the system\nand it is very interesting to understand how these old game consoles work.\nI also learned quite a bit about how some of my favorite GB games were programmed."}]
56:["$","h2",null,{"children":"Documentation"}]
57:["$","ul",null,{"children":["\n",["$","li",null,{"children":["BGB's ",["$","a",null,{"href":"http://bgb.bircd.org/pandocs.htm","target":"_blank","className":"underline","children":"Pan Docs"}]," is hands down some of the best documentation out there."]}],"\n",["$","li",null,{"children":[["$","a",null,{"href":"http://www.chrisantonellis.com/files/gameboy/gb-programming-manual.pdf","target":"_blank","className":"underline","children":"GB Programming Manual"}]," (a document by Nintendo for game developers)"]}],"\n",["$","li",null,{"children":["The ",["$","a",null,{"href":"https://reddit.com/r/emudev","target":"_blank","className":"underline","children":"emudev"}]," subreddit was a tremendously helpful resource and great community."]}],"\n"]}]
58:["$","span",null,{"className":"hljs-keyword","children":"match"}]
59:["$","span",null,{"className":"hljs-keyword","children":"self"}]
5a:["$","span",null,{"className":"hljs-number","children":"0"}]
5b:["$","span",null,{"className":"hljs-comment","children":"// OAM"}]
5c:["$","span",null,{"className":"hljs-keyword","children":"if"}]
5d:["$","span",null,{"className":"hljs-keyword","children":"self"}]
5e:["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_mode"}]
5f:["$","span",null,{"className":"hljs-keyword","children":"self"}]
60:["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_set"}]
61:["$","span",null,{"className":"hljs-comment","children":"// Transfer"}]
62:["$","span",null,{"className":"hljs-keyword","children":"if"}]
63:["$","span",null,{"className":"hljs-keyword","children":"self"}]
64:["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_mode"}]
65:["$","span",null,{"className":"hljs-comment","children":"// ransferring data from VRAM to screen."}]
66:["$","span",null,{"className":"hljs-keyword","children":"self"}]
67:["$","span",null,{"className":"hljs-title function_ invoke__","children":"update_scanline"}]
68:["$","span",null,{"className":"hljs-comment","children":"// H-Blank "}]
69:["$","span",null,{"className":"hljs-comment","children":"// We have just entered H-Blank"}]
6a:["$","span",null,{"className":"hljs-keyword","children":"if"}]
6b:["$","span",null,{"className":"hljs-keyword","children":"self"}]
6c:["$","span",null,{"className":"hljs-title function_ invoke__","children":"set_mode"}]
6d:["$","span",null,{"className":"hljs-keyword","children":"self"}]
6e:["$","span",null,{"className":"hljs-title function_ invoke__","children":"is_set"}]
6f:["$","span",null,{"className":"hljs-comment","children":"// request an interrupt if we need to"}]
70:["$","span",null,{"className":"hljs-keyword","children":"if"}]
71:["$","span",null,{"className":"hljs-title function_ invoke__","children":"request_interrupt"}]
72:["$","span",null,{"className":"hljs-comment","children":"// If we have finished the H-Blank period, we are on a new line"}]
73:["$","span",null,{"className":"hljs-comment","children":"// LY is updated even if we are in V-blank"}]
74:["$","span",null,{"className":"hljs-keyword","children":"if"}]
75:["$","span",null,{"className":"hljs-keyword","children":"self"}]
76:["$","span",null,{"className":"hljs-keyword","children":"self"}]
77:["$","span",null,{"className":"hljs-title function_ invoke__","children":"add"}]
78:["$","span",null,{"className":"hljs-number","children":"1"}]
79:["$","span",null,{"className":"hljs-keyword","children":"self"}]
7a:["$","span",null,{"className":"hljs-number","children":"0"}]
7b:["$","span",null,{"className":"hljs-keyword","children":"self"}]
7c:["$","span",null,{"className":"hljs-title function_ invoke__","children":"line_compare"}]
