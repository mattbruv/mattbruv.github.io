1:"$Sreact.fragment"
2:I[9766,[],""]
3:I[8924,[],""]
5:I[4431,[],"OutletBoundary"]
7:I[5278,[],"AsyncMetadataOutlet"]
9:I[4431,[],"ViewportBoundary"]
b:I[4431,[],"MetadataBoundary"]
c:"$Sreact.suspense"
e:I[7150,[],""]
:HL["/_next/static/css/0f63a619df29c78b.css","style"]
:HL["/_next/static/css/5eacd01f773eed7f.css","style"]
0:{"P":null,"b":"lLKmyGbgC9GZXyGPxKThQ","p":"","c":["","euler",""],"i":false,"f":[[["",{"children":[["slug","euler","d"],{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0f63a619df29c78b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","meta",null,{"charSet":"UTF-8"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]]}],["$","body",null,{"id":"main","className":"main px-5 pb-10 max-w-5xl m-auto","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":[["slug","euler","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5eacd01f773eed7f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6",["$","$L7",null,{"promise":"$@8"}]]}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$L9",null,{"children":"$La"}],null],["$","$Lb",null,{"children":["$","div",null,{"hidden":true,"children":["$","$c",null,{"fallback":null,"children":"$Ld"}]}]}]]}],false]],"m":"$undefined","G":["$e",[]],"s":false,"S":true}
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
f:I[2619,["619","static/chunks/619-ba102abea3e3d0e4.js","182","static/chunks/app/%5Bslug%5D/page-a8d66757df33bd31.js"],""]
4:["$","div",null,{"children":[["$","div",null,{"className":"flex flex-wrap p-1 sm:p-3","children":[[["$","$Lf","0",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all font-bold","href":"/","children":"Blog"}],["$","$Lf","1",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all font-normal","href":"/projects","children":"Projects"}],["$","$Lf","2",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all font-normal","href":"/travel","children":"Travel"}],["$","$Lf","3",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all font-normal","href":"/about","children":"About Me"}]],["$","$Lf","contact",{"className":"mx-3 p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-200 transition-all ","target":"_blank","href":"https://docs.google.com/forms/d/e/1FAIpQLScM11T5L9SjhZ1c9A3OB7aWc6DuLYTzf9DStnFkalDKaKDpaA/viewform?usp=sharing&ouid=112011499277324502181","children":"Contact"}]]}],["$","div",null,{"className":"md:flex md:justify-center","children":["$","article",null,{"className":"prose md:prose-lg lg:prose-xl mt-16","children":[["$","h1",null,{"className":"mb-0","children":"What I learned solving 70+ Project Euler problems"}],null,["$","div",null,{"className":"text-gray-400","children":"January 23, 2020"}],["$","div",null,{"className":"mt-6","children":[["$","p",null,{"children":["$","img",null,{"src":"https://projecteuler.net/profile/mp32.png","alt":"Project Euler Badge"}]}],"\n",["$","p",null,{"children":[["$","a",null,{"href":"https://projecteuler.net/","target":"_blank","className":"underline","children":"Project Euler"}]," is a website dedicated to mathematical/computational problems intended to be solved by computer programs.\nToday I just submitted my 70th correct answer, which places me near the ",["$","a",null,{"href":"https://projecteuler.net/problem_analysis","target":"_blank","className":"underline","children":"top 2%"}]," out of nearly 1,000,000 users by number of problems solved."]}],"\n","\n",["$","p",null,{"children":"In this post I will share some of my most and least favorite problems,\nwhat I learned through solving them,\nhow my solutions compare to the solutions of others,\nand what makes certain programming languages well suited for solving these kinds of problems."}],"\n",["$","h2",null,{"children":"What makes a Project Euler problem?"}],"\n",["$","p",null,{"children":"The typical problem on Project Euler usually involves number theory.\nThis usually means searching a large number range for numbers that meet certain criteria.\nThe size of the search space usually makes brute force solutions very time consuming or difficult, but not impossible.\nA slow brute force solution often encourages (and sometimes demands) creativity in order to solve the problem in a reasonable amount of time."}],"\n",["$","p",null,{"children":["For the simplest example, let's take a look at ",["$","a",null,{"href":"https://projecteuler.net/problem=1","target":"_blank","className":"underline","children":"Problem 1"}],":"]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.\nFind the sum of all the multiples of 3 or 5 below 1000."}],"\n"]}],"\n",["$","p",null,{"children":"In order to solve Problem 1, we have to check each number between 1 and 1000, determine\nif it is evenly divisible by 3 or 5, and if so, add it to our total.\nOf course the solution to this problem is easy, and it can be solved in one line of Python code:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-python","children":[["$","span",null,{"className":"hljs-built_in","children":"print"}],"(",["$","span",null,{"className":"hljs-built_in","children":"sum"}],"(",["$","span",null,{"className":"hljs-built_in","children":"filter"}],"(","$L10"," x: x % ","$L11"," == ","$L12"," ","$L13"," x % ","$L14"," == ","$L15",", ","$L16","(","$L17","))))\n"]}]}],"\n","$L18","\n","$L19","\n","$L1a","\n","$L1b","\n","$L1c","\n","$L1d","\n","$L1e","\n","$L1f","\n","$L20","\n","$L21","\n","$L22","\n","$L23","\n","$L24","\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35","\n","$L36"]}]]}]}]]}]
8:{"metadata":[["$","title","0",{"children":"What I learned solving 70+ Project Euler problems - Matt's Blog"}],["$","meta","1",{"name":"description","content":"A blog about coding, travel, and life."}]],"error":null,"digest":"$undefined"}
d:"$8:metadata"
10:["$","span",null,{"className":"hljs-keyword","children":"lambda"}]
11:["$","span",null,{"className":"hljs-number","children":"5"}]
12:["$","span",null,{"className":"hljs-number","children":"0"}]
13:["$","span",null,{"className":"hljs-keyword","children":"or"}]
14:["$","span",null,{"className":"hljs-number","children":"3"}]
15:["$","span",null,{"className":"hljs-number","children":"0"}]
16:["$","span",null,{"className":"hljs-built_in","children":"range"}]
17:["$","span",null,{"className":"hljs-number","children":"1000"}]
18:["$","p",null,{"children":"As we can see, problem 1 is simple enough to be brute forced in milliseconds.\nHowever, not all problems are this straightforward."}]
19:["$","h2",null,{"children":"Cubic Permutations"}]
1a:["$","p",null,{"children":["Let's take a look at one of my favorite problems,\n",["$","a",null,{"href":"https://projecteuler.net/problem=62","target":"_blank","className":"underline","children":"Problem 62"}],":"]}]
1b:["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"The cube, 41063625 (345^3), can be permuted to produce two other cubes: 56623104 (384^3) and 66430125 (405^3). In fact, 41063625 is the smallest cube which has exactly three permutations of its digits which are also cube."}],"\n",["$","p",null,{"children":"Find the smallest cube for which exactly five permutations of its digits are cube."}],"\n"]}]
1c:["$","p",null,{"children":["$","strong",null,{"children":"If this problem interests you, you should solve it on your own before continuing."}]}]
1d:["$","p",null,{"children":["Typically whenever I solve a new problem, I try to implement the most naive\nbrute-force solution that first comes to my mind and see how it does.\nOn my first attempt, I usually rush to get ",["$","em",null,{"children":"something"}]," working.\nIf the first attempt doesn't solve it reasonably fast, it at least\ngives me an idea as to how difficult of a problem it is."]}]
1e:["$","h3",null,{"children":"Attempt 1"}]
1f:["$","p",null,{"children":"On my first try, I put the first 1000 cubes in a list.\nThen I iterated from 125 to 1000 (can't remember why I chose this range), testing the permutations of each cube.\nIf any one of the permutations was found in the list, I increment the cube counter.\nOnce it hits 5, I break."}]
20:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"from"}]," itertools ",["$","span",null,{"className":"hljs-keyword","children":"import"}]," permutations\n\n",["$","span",null,{"className":"hljs-keyword","children":"def"}]," ",["$","span",null,{"className":"hljs-title function_","children":"cube"}],"(",["$","span",null,{"className":"hljs-params","children":"n"}],"):\n    total = ",["$","span",null,{"className":"hljs-number","children":"1"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," i ",["$","span",null,{"className":"hljs-keyword","children":"in"}]," ",["$","span",null,{"className":"hljs-built_in","children":"range"}],"(",["$","span",null,{"className":"hljs-number","children":"0"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"):\n        total = total * n\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," total\n\n",["$","span",null,{"className":"hljs-keyword","children":"def"}]," ",["$","span",null,{"className":"hljs-title function_","children":"problem62"}],"():\n    cubes = []\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," i ",["$","span",null,{"className":"hljs-keyword","children":"in"}]," ",["$","span",null,{"className":"hljs-built_in","children":"range"}],"(",["$","span",null,{"className":"hljs-number","children":"0"}],", ",["$","span",null,{"className":"hljs-built_in","children":"int"}],"(",["$","span",null,{"className":"hljs-number","children":"1000"}],")):\n        cubes.append(",["$","span",null,{"className":"hljs-built_in","children":"str"}],"(cube(i)))\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," i ",["$","span",null,{"className":"hljs-keyword","children":"in"}]," ",["$","span",null,{"className":"hljs-built_in","children":"range"}],"(",["$","span",null,{"className":"hljs-number","children":"125"}],", ",["$","span",null,{"className":"hljs-number","children":"1000"}],"):\n        ",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(i)\n        n = cube(i)\n        perms = permutations(",["$","span",null,{"className":"hljs-built_in","children":"str"}],"(n))\n        numCubes = ",["$","span",null,{"className":"hljs-number","children":"0"}],"\n        ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," p ",["$","span",null,{"className":"hljs-keyword","children":"in"}]," perms:\n            s = ",["$","span",null,{"className":"hljs-string","children":"''"}],".join(p)\n            ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," s ",["$","span",null,{"className":"hljs-keyword","children":"in"}]," cubes:\n                numCubes += ",["$","span",null,{"className":"hljs-number","children":"1"}],"\n        ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," numCubes == ",["$","span",null,{"className":"hljs-number","children":"5"}],":\n            ",["$","span",null,{"className":"hljs-keyword","children":"break"}],"\n    ",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(i)\n"]}]}]
21:["$","p",null,{"children":"This approach was very slow, and was only able to search about ~400 cubes in 11 minutes without an answer.\nThis is also under the assumption that the answer could be found within the first 1000 cubes.\nIf the answer was over i=1000, this algorithm would explode...\nThis tells me that I need to take a different approach:"}]
22:["$","h3",null,{"children":"Attempt 2"}]
23:["$","p",null,{"children":"This time around I didn't store a list of cubes to search through.\nContinually searching through a large list is costly and can slow things to a crawl.\nNow I take every number, cube it, and for each permutation I use math to see if it's a cubed number\ninstead of looking the permutation up in a list of cubes."}]
24:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"from"}]," itertools ",["$","span",null,{"className":"hljs-keyword","children":"import"}]," permutations\n",["$","span",null,{"className":"hljs-keyword","children":"import"}]," math\n\n",["$","span",null,{"className":"hljs-keyword","children":"def"}]," ",["$","span",null,{"className":"hljs-title function_","children":"cube"}],"(",["$","span",null,{"className":"hljs-params","children":"n"}],"):\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-built_in","children":"int"}],"(math.",["$","span",null,{"className":"hljs-built_in","children":"pow"}],"(n, ",["$","span",null,{"className":"hljs-number","children":"3"}],"))\n\n",["$","span",null,{"className":"hljs-keyword","children":"def"}]," ",["$","span",null,{"className":"hljs-title function_","children":"isCube"}],"(",["$","span",null,{"className":"hljs-params","children":"n"}],"):\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," n <= ",["$","span",null,{"className":"hljs-number","children":"1"}],":\n        ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-literal","children":"False"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," n == cube(",["$","span",null,{"className":"hljs-built_in","children":"round"}],"(n ** (",["$","span",null,{"className":"hljs-number","children":"1"}]," / ",["$","span",null,{"className":"hljs-number","children":"3"}],")))\n\n",["$","span",null,{"className":"hljs-keyword","children":"def"}]," ",["$","span",null,{"className":"hljs-title function_","children":"problem62"}],"():\n    i = ",["$","span",null,{"className":"hljs-number","children":"2"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"while"}]," ",["$","span",null,{"className":"hljs-literal","children":"True"}],":\n        ",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(i)\n        n = cube(i)\n        perms = ",["$","span",null,{"className":"hljs-built_in","children":"list"}],"(",["$","span",null,{"className":"hljs-built_in","children":"filter"}],"(isCube, ",["$","span",null,{"className":"hljs-built_in","children":"set"}],"(",["$","span",null,{"className":"hljs-built_in","children":"map"}],"(",["$","span",null,{"className":"hljs-keyword","children":"lambda"}]," x: ",["$","span",null,{"className":"hljs-built_in","children":"int"}],"(",["$","span",null,{"className":"hljs-string","children":"''"}],".join(x)), permutations(",["$","span",null,{"className":"hljs-built_in","children":"str"}],"(n))))))\n        ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," ",["$","span",null,{"className":"hljs-built_in","children":"len"}],"(perms) >= ",["$","span",null,{"className":"hljs-number","children":"5"}],":\n            lens = ",["$","span",null,{"className":"hljs-built_in","children":"list"}],"(",["$","span",null,{"className":"hljs-built_in","children":"filter"}],"(",["$","span",null,{"className":"hljs-keyword","children":"lambda"}]," x: ",["$","span",null,{"className":"hljs-built_in","children":"len"}],"(",["$","span",null,{"className":"hljs-built_in","children":"str"}],"(x)) == ",["$","span",null,{"className":"hljs-built_in","children":"len"}],"(",["$","span",null,{"className":"hljs-built_in","children":"str"}],"(n)), perms))\n            ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," ",["$","span",null,{"className":"hljs-built_in","children":"len"}],"(lens) == ",["$","span",null,{"className":"hljs-number","children":"5"}],":\n                ",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(i, lens)\n                ",["$","span",null,{"className":"hljs-keyword","children":"break"}],"\n        i += ",["$","span",null,{"className":"hljs-number","children":"1"}],"\n"]}]}]
25:["$","p",null,{"children":"This ended up being quite faster than my first attempt. The second attempt processed ~400 numbers in\nabout 11 seconds, as opposed to 11 minutes.\nI felt more confident in this one.\nHowever, as the numbers grew, the program slowed again.\nAfter waiting nearly 2 hours, my program was only at i=2200 without an answer.\nEven though this seemed faster, it wasn't good enough.\nIt was time to go back to the drawing board for a third time."}]
26:["$","h3",null,{"children":"Attempt 3"}]
27:["$","p",null,{"children":"At this point it was clear that any kind of brute force search or calculations of permutations\nwas going to take too long.\nThere had to be a clever way.\nThen the lightbulb went off in my head.\nIf two numbers are permutations of each other, they must have the same amount and number of individual digits.\nIf I treat the cube as a string and sort the individual numbers,\nthat result could be used as a key in a dictionary.\nEffectively, I could have a dictionary which holds lists of numbers which are indexed by their sorted cube hash.\nWhen a list reaches 5 elements, that is the list that we care about."}]
28:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"def"}]," ",["$","span",null,{"className":"hljs-title function_","children":"cube"}],"(",["$","span",null,{"className":"hljs-params","children":"n"}],"):\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," n ** ",["$","span",null,{"className":"hljs-number","children":"3"}],"\n\n",["$","span",null,{"className":"hljs-keyword","children":"def"}]," ",["$","span",null,{"className":"hljs-title function_","children":"toKey"}],"(",["$","span",null,{"className":"hljs-params","children":"n"}],"):\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"''"}],".join(",["$","span",null,{"className":"hljs-built_in","children":"sorted"}],"(",["$","span",null,{"className":"hljs-built_in","children":"str"}],"(n)))\n\n",["$","span",null,{"className":"hljs-keyword","children":"def"}]," ",["$","span",null,{"className":"hljs-title function_","children":"problem62"}],"():\n    cubes = {}\n    i = ",["$","span",null,{"className":"hljs-number","children":"1"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"while"}]," ",["$","span",null,{"className":"hljs-literal","children":"True"}],":\n        key = toKey(cube(i))\n        perms = cubes.get(key)\n        ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," perms == ",["$","span",null,{"className":"hljs-literal","children":"None"}],":\n            cubes[key] = [i]\n        ",["$","span",null,{"className":"hljs-keyword","children":"else"}],":\n            cubes[key].append(i)\n            ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," ",["$","span",null,{"className":"hljs-built_in","children":"len"}],"(cubes[key]) == ",["$","span",null,{"className":"hljs-number","children":"5"}],":\n                ",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(",["$","span",null,{"className":"hljs-built_in","children":"min"}],"(",["$","span",null,{"className":"hljs-built_in","children":"map"}],"(cube, cubes[key])))\n                ",["$","span",null,{"className":"hljs-keyword","children":"break"}],"\n        i += ",["$","span",null,{"className":"hljs-number","children":"1"}],"\n"]}]}]
29:["$","p",null,{"children":"The results were amazing!\nThe correct answer is found in 30 milliseconds!\nNot only is the answer found so quickly, but the code\nis much simpler.\nWe also don't have to import anything or create permutations of numbers."}]
2a:["$","p",null,{"children":"One of the best things that Project Euler offers is this \"eureka\" moment\nthat you get when figuring out a clever solution to a problem."}]
2b:["$","h2",null,{"children":"A Comparison of Languages"}]
2c:["$","p",null,{"children":["I originally started working on these problems as a way to learn Common Lisp,\nClojure, and functional programming.\nHowever, as time went on, I found it more fun to see how elegantly I could solve\nthe problems with a language I felt more comfortable with.\nI began using Python to solve the problems.\nI also wrote a handy ",["$","a",null,{"href":"https://github.com/mattbruv/project-euler/blob/master/run.py","target":"_blank","className":"underline","children":"little wrapper script"}],"\nwhich can run any problem simply by calling ",["$","code",null,{"children":"python run.py [problem number]"}],".\nThis script would execute the problem and return the amount of time taken for it to run,\nor the amount of time taken if exited prematurely.\nThis script was very nice for quickly running code and having performance feedback,\nas well as keeping timing code separated from the actual problem code."]}]
2d:["$","p",null,{"children":"Python proved to be the real winner for these kinds of problems.\nThe ability to take an imperative approach when needed,\neffortlessly print anything from any part of the code for debugging,\nbatteries-included support for big numbers, decimals, fractions, etc.\nas well as being a dynamic language made transformations of numbers between datatypes\na breeze.\nNo other language comes close to this simplicity.\nWith Python I spent 99% of my time working on the actual problem,\nnot fighting against the language."}]
2e:["$","p",null,{"children":["Clojure is worth mentioning as well.\nI found that the Clojure code I wrote ended up being prettier\nand easier to follow than some of the other submissions.\nFor example, this is my solution to ",["$","a",null,{"href":"https://projecteuler.net/problem=23","target":"_blank","className":"underline","children":"Problem 23"}],":"]}]
2f:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-clj","children":["(",["$","span",null,{"className":"hljs-keyword","children":"defn"}]," ",["$","span",null,{"className":"hljs-title","children":"divisors"}]," [n]\n  (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"if"}]}]," (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"="}]}]," n ",["$","span",null,{"className":"hljs-number","children":"1"}],")\n    []\n    (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"filter"}]}]," #(",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"="}]}]," ",["$","span",null,{"className":"hljs-number","children":"0"}]," (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"rem"}]}]," n %)) (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"range"}]}]," ",["$","span",null,{"className":"hljs-number","children":"1"}]," n))))\n\n(",["$","span",null,{"className":"hljs-keyword","children":"defn"}]," ",["$","span",null,{"className":"hljs-title","children":"is-abundant"}]," [n] (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"<"}]}]," n (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"reduce"}]}]," + (",["$","span",null,{"className":"hljs-name","children":"divisors"}]," n))))\n\n(",["$","span",null,{"className":"hljs-keyword","children":"def"}]," ",["$","span",null,{"className":"hljs-title","children":"abundants"}]," (",["$","span",null,{"className":"hljs-name","children":"set"}]," (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"filter"}]}]," is-abundant (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"range"}]}]," ",["$","span",null,{"className":"hljs-number","children":"1"}]," ",["$","span",null,{"className":"hljs-number","children":"28123"}],"))))\n\n(",["$","span",null,{"className":"hljs-keyword","children":"defn"}]," ",["$","span",null,{"className":"hljs-title","children":"is-non-abundant-sum"}]," [n]\n  (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"not-any?"}]}]," #(",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"contains?"}]}]," abundants (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"-"}]}]," n %)) abundants))\n\n(",["$","span",null,{"className":"hljs-keyword","children":"defn"}]," ",["$","span",null,{"className":"hljs-title","children":"problem23"}]," [] (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"reduce"}]}]," + (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"filter"}]}]," is-non-abundant-sum (",["$","span",null,{"className":"hljs-name","children":["$","span",null,{"className":"hljs-built_in","children":"range"}]}]," ",["$","span",null,{"className":"hljs-number","children":"1"}]," ",["$","span",null,{"className":"hljs-number","children":"28123"}],"))))\n"]}]}]
30:["$","p",null,{"children":"Only 9 lines of code to find the answer in 12 seconds.\nCompare this to an average C++ solution found in the solution thread.\nOne is easier to read and understand than the other:"}]
31:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-c++","children":[["$","span",null,{"className":"hljs-function","children":[["$","span",null,{"className":"hljs-type","children":"int"}]," ",["$","span",null,{"className":"hljs-title","children":"main"}],["$","span",null,{"className":"hljs-params","children":"()"}],"\n"]}],"{\n    ",["$","span",null,{"className":"hljs-type","children":"int"}]," n=",["$","span",null,{"className":"hljs-number","children":"28123"}],";\n    ",["$","span",null,{"className":"hljs-type","children":"long"}]," ",["$","span",null,{"className":"hljs-type","children":"long"}]," ",["$","span",null,{"className":"hljs-type","children":"int"}]," sum1=",["$","span",null,{"className":"hljs-number","children":"0"}],";\n     ",["$","span",null,{"className":"hljs-type","children":"int"}]," arr[",["$","span",null,{"className":"hljs-number","children":"7000"}],"]={",["$","span",null,{"className":"hljs-number","children":"0"}],"},a=",["$","span",null,{"className":"hljs-number","children":"0"}],";\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}],"(",["$","span",null,{"className":"hljs-type","children":"int"}]," i=",["$","span",null,{"className":"hljs-number","children":"1"}],";i<=n;i++)\n    {\n        ",["$","span",null,{"className":"hljs-type","children":"int"}]," sum=",["$","span",null,{"className":"hljs-number","children":"0"}],";\n        ",["$","span",null,{"className":"hljs-keyword","children":"for"}],"(",["$","span",null,{"className":"hljs-type","children":"int"}]," j=",["$","span",null,{"className":"hljs-number","children":"1"}],";j<i;j++)\n        {\n            ",["$","span",null,{"className":"hljs-keyword","children":"if"}],"(i%j==",["$","span",null,{"className":"hljs-number","children":"0"}],")\n            {\n                sum=sum+j;\n            }\n        }\n        ",["$","span",null,{"className":"hljs-keyword","children":"if"}],"(sum>i)\n        {\n            arr[a]=i;\n            a++;\n        }\n    }\n    ",["$","span",null,{"className":"hljs-type","children":"int"}]," arr1[",["$","span",null,{"className":"hljs-number","children":"28123"}],"]={",["$","span",null,{"className":"hljs-number","children":"0"}],"};\n    ",["$","span",null,{"className":"hljs-type","children":"int"}]," sum=",["$","span",null,{"className":"hljs-number","children":"0"}],";\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}],"(",["$","span",null,{"className":"hljs-type","children":"int"}]," i=",["$","span",null,{"className":"hljs-number","children":"0"}],";i<a;i++)\n    {\n        ",["$","span",null,{"className":"hljs-keyword","children":"for"}],"(",["$","span",null,{"className":"hljs-type","children":"int"}]," j=i;j<a;j++)\n        {\n            ",["$","span",null,{"className":"hljs-keyword","children":"if"}],"((arr[i]+arr[j])<=n)\n            {\n                sum=arr[i]+arr[j];\n                arr1∑++;\n            }\n            ",["$","span",null,{"className":"hljs-keyword","children":"else"}],"\n                ",["$","span",null,{"className":"hljs-keyword","children":"break"}],";\n        }\n    }\n    sum=",["$","span",null,{"className":"hljs-number","children":"0"}],";\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}],"(",["$","span",null,{"className":"hljs-type","children":"int"}]," i=",["$","span",null,{"className":"hljs-number","children":"0"}],";i<=n;i++)\n    {\n        ",["$","span",null,{"className":"hljs-keyword","children":"if"}],"(arr1[i]==",["$","span",null,{"className":"hljs-number","children":"0"}],")\n            sum=sum+i;\n    }\n        ",["$","span",null,{"className":"hljs-built_in","children":"printf"}],"(",["$","span",null,{"className":"hljs-string","children":"\"%d\""}],",sum);\n}\n"]}]}]
32:["$","p",null,{"children":"However Clojure is far from perfect.\nAfter using it for a handful of problems I am somewhat indifferent to it.\nThe long REPL load times,\nthe obnoxiously verbose, cryptic, and unhelpful stack trace/error messages,\nand the foul stench of the Java ecosystem underneath it\nwas enough to turn me off from the language."}]
33:["$","h2",null,{"children":"Conclusion"}]
34:["$","p",null,{"children":"After solving 70 problems, I've learned the following:"}]
35:["$","ul",null,{"children":["\n",["$","li",null,{"children":"Dynamic languages are the best tools for solving these kinds of problems."}],"\n",["$","li",null,{"children":"You know nothing about math and you should feel bad about it."}],"\n",["$","li",null,{"children":"There is always some German guy solving problems in hand-written x86 Assembly who is much smarter than you."}],"\n",["$","li",null,{"children":"There is always some Polish guy solving problems with a pen and paper who is much smarter than everyone else."}],"\n"]}]
36:["$","p",null,{"children":"Overall, the site offers good mathematically inclined challenges that push you to\nthink about the problem and write better code."}]
